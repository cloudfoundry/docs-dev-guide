---
title: Accessing services with SSH
owner: Core Services
---



You can gain direct command line access to your deployed service instance using SSH. This allows you to, for example, access your database to run raw SQL commands to edit the schema, import and export data, or debug app data issues.

To establish direct command line access to a service, you deploy a host app and use its SSH and port forwarding features to communicate with the service instance through the app container. The technique described here works with TCP services such as MySQL or Redis.

_This topic assumes you are using Cloud Foundry Command Line Interface (cf CLI) v6.15.0 or later, but at least v7 is recommended._

<%= vars.mutual_tls_ssh %>

<p class="note important">
The procedure in this topic requires use of a service key, and not all services support service keys. Some services support credentials through <a href="../services/application-binding.html">app binding</a> only.</p>


## <a id="create-instance"></a> Create a Service Instance

1. In your terminal window, log in to your deployment with `cf login`.

1. <%= vars.ssh_marketplace_step %>

    <pre class="terminal">
    $ cf marketplace
    <%=vars.ssh_marketplace_output %>
    </pre>

1. Create your service instance. As part of the [create-service](http://cli.cloudfoundry.org/en-US/cf/create-service.html) command, indicate the service name, the service plan, and the name you choose for your service instance.

    <pre class="terminal">
    $ cf create-service <%=vars.ssh_service %> <%=vars.ssh_service_plan %> MY-DB
    </pre>

##<a id="push-app"></a>Push Your Host App##

To push an app that will act as the host for the SSH tunnel, push any app that will successfully deploy to <%= vars.app_runtime_full %>.
You must prepare your app before you push it. See the <a href="deploy-app.html">Pushing an App</a> topic for details on preparing apps for pushing.

1. Push your app:

    ```console
    cf push YOUR-HOST-APP
    ```

2. Enable SSH for your app:

    ```console
    cf enable-ssh YOUR-HOST-APP
    ```

<p class="note important">
<span class="note__title">Important</span>
To enable SSH access to your app, SSH access must also be enabled for both the space that contains the app and <%= vars.app_runtime_full %>. For more information, see <a href="./app-ssh-overview.html">App SSH Overview</a>.


##<a id="bind-app"></a>Create Your Service Key##
To establish SSH access to your service instance, you must create a service key that contains critical information for configuring your SSH tunnel.

1. Create a service key for your service instance using the [cf create-service-key](http://cli.cloudfoundry.org/en-US/cf/create-service-key.html) command.

    ```console
    cf create-service-key MY-DB EXTERNAL-ACCESS-KEY
    ```

1. Retrieve your new service key using the [cf service-key](http://cli.cloudfoundry.org/en-US/cf/service-key.html) command.

    ```console
    cf service-key MY-DB EXTERNAL-ACCESS-KEY
    ```

    For example:

    <pre class="terminal">
    $ cf service-key MY-DB EXTERNAL-ACCESS-KEY
    Getting key EXTERNAL-ACCESS-KEY for service instance MY-DB as user<span>@</span>example.com
    <%= vars.ssh_service_access_key %>
    </pre>


## <a id="ssh-tunnel"></a> Configure Your SSH Tunnel

Configure an SSH tunnel to your service instance using [cf ssh](http://cli.cloudfoundry.org/en-US/cf/ssh.html). Tailor the example command below with information from your service key.
<pre class="terminal">$ cf ssh -L 63306:<%= vars.ssh_service_host %>:3306 YOUR-HOST-APP</pre>

* Use any available local port for port forwarding. For example, `63306`.
* Replace `<%= vars.ssh_service_host %>` with the address provided under `hostname` in the service key retrieved above.
* Replace `3306` with the port provided under `port` above.
* Replace `YOUR-HOST-APP` with the name of your host app.

After you enter the command, open another terminal window and perform the steps below in [Access Your Service Instance](#access-service).


## <a id="access-service"></a> Access Your Service Instance

To establish direct command-line access to your service instance, use the relevant command line tool for that service. This example uses the MySQL command line client to access the <%= vars.ssh_service %> service instance.

<pre class="terminal">
$ mysql -u b5136e448be920 -h 0 -p -D ad_b2fca6t49704585d -P 63306
</pre>

* Replace `b5136e448be920` with the username provided under `username` in your service key.
* `-h 0` instructs `mysql` to connect to your local machine (use `-h 127.0.0.1` for Windows).
* `-p` instructs `mysql` to prompt for a password. When prompted, use the password provided under `password` in your service key.
* Replace `ad_b2fca6t49704585d` with the database name provided under `name` in your service key.
* `-P 63306` instructs `mysql` to connect on port `63306`.
